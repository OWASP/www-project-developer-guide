name: Release docs

on:
  push:
    # only for version x.x.x releases and release candidates
    tags:
      - v?.?.?*
  workflow_dispatch:

# for security reasons the github actions are pinned to specific release versions
jobs:
  create_release:
    name: Release pull-request
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout markdown
        uses: actions/checkout@v4.1.1

      - name: Promote draft to release
        run: |
          echo "GITHUB_WORKFLOW: ${GITHUB_WORKFLOW}"
          echo "GITHUB_REF_NAME: ${GITHUB_REF_NAME}"
          cd draft
          pwd
          find . -name "*.md" ! -name "info.md" -exec cp '{}' '../release/{}' \;

      - name: Fix up markdown
        run: |
          pwd
          find release -name "*.md" -exec sed -i "s|permalink: /draft/|permalink: /release/|" {} +
          find release -name "*.md" -exec sed -i "/The OWASP Developer Guide is a community effort/d" {} +
          find release -name "*.md" -exec sed -i "/edit on GitHub/d" {} +
          find release -name "*.md" -exec sed -i "/www-project-developer-guide\/issues\/new?labels/d" {} +
          find release -name "*.md" -exec sed -i "/www-project-developer-guide\/blob\/main/d" {} +
          find release -name "*.md" -exec \
          sed -i "s/.*the latest contributions to the Developer Guide.*/\#\#\# Release version $GITHUB_REF_NAME/" {} +
          find release -name "*.md" -exec sed -i "s/ (Draft)//gI" {} +
          find release -name "*.md" -exec sed -i "/order: / s/$/0/" {} +

      - name: Combine markdown
        run: |
          tail --lines=+14 -q $(find release -name "*[0-9]*.md" | sort) > release.markdown
          mkdir -p publish

      - name: Export to pdf
        uses: docker://pandoc/latex:3.1
        with:
          args: >-
            --from=markdown
            --output=publish/OWASP_Developer_Guide.pdf
            --resource-path="release/assets/images:release/assets:release"
            release/title.pdf.yaml
            release.markdown

      - name: Export to epub
        uses: docker://pandoc/latex:3.1
        with:
          args: >-
            --from=markdown
            --output=publish/OWASP_Developer_Guide.epub
            --resource-path="release/assets/images:release/assets:release"
            release/title.yaml
            release.markdown

      - name: Save pdfs and epubs
        uses: actions/upload-artifact@v4.3.0
        with:
          name: export-docs
          path: publish

      - name: Update pdfs and epubs
        run: |
          pwd && ls -hal publish
          cp publish/OWASP_Developer_Guide.* assets/exports/.

      - name: Remove newpage tags
        run: |
          find release -name "*.md" -exec sed -i '/newpage/d' {} +

      - name: Remove multiple blank lines
        run: |
          find release -name "*.md" -exec sed -i ':a; /^\n*$/{ s/\n//; N;  ba};' {} +
          find release -name "*.md" -exec sed -i '${/^$/d;}' {} +

      - name: Create pull request
        uses: peter-evans/create-pull-request@v6.0.2
        with:
          title: |
            Release ${{ github.ref_name }} of Developer Guide 
          body: |
            **Summary** :  
            Pull request automatically generated for the latest release version  
            
            **Description for the changelog** :  
            release of version ${{ github.ref_name }} 
            
            **Other info** :  
            Please verify and then merge the pull request to update the release  
          commit-message: update to release version ${{ github.ref_name }} 
          branch: update-release
          base: main
